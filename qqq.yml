version: "3"
services:
  mongo:
    image: registry.evfapp.dev/alpine-mongo:latest
    ports:
        - "8119:27017"
    networks:
      - $NETWORK_NAME
      
  broadcaster:
    image: registry.evfapp.dev/evf-broadcaster-server:latest
    environment:
      SERVICE_PORTS: "2345"
    networks:
      - $NETWORK_NAME
 
  routerservice:
    image: registry.evfapp.dev/evfpaas-router-service:latest
    environment:
      HASH_RING_REFRESH_TIME_INTERVAL: "10000"
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
      SERVICE_PORTS: "3000"
      BROADCASTER_HOST : "broadcaster"
    networks:
      - $NETWORK_NAME
      - router_network

       
  web:
    image: $REGISTRY/${APP_IMAGE_NAME}:latest
    depends_on:
      - mongo
      - broadcaster
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        delay: 60s
    environment:
      VIRTUAL_HOST:  "https://${APP_IMAGE_NAME}.${DOMAIN_NAME},${APP_IMAGE_NAME}.${DOMAIN_NAME}"
      SERVICE_PORTS: "3000"
      FORCE_SSL: "yes"
      CONSISTENT_HASH: "true"
      SERVICE_NAME: "${APP_IMAGE_NAME}"
      BROADCASTER_HOST: "broadcaster"
      ORCHESTRATOR: "dockerSwarm"
      NETWORK_INTERFACE_NAME: "eth2"
      APP_URL: "https:/${APP_IMAGE_NAME}.${DOMAIN_NAME}/api"
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    networks:
      - $NETWORK_NAME
      - router_network
    healthcheck:
      test: "curl http://0.0.0.0:3000/login"
      interval: 1m30s
      timeout: 3s
      retries: 5

networks:
  $NETWORK_NAME:
  router_network:
    external: true
