/**
 *
 * Â©2016-2017 EdgeVerve Systems Limited (a fully owned Infosys subsidiary),
 * Bangalore, India. All Rights Reserved.
 *
 */
var chalk = require('chalk');
var bootstrap = require('./bootstrap');
var expect = bootstrap.chai.expect;
var models = bootstrap.models;
var app = bootstrap.app;
var chai = require('chai');
chai.use(require('chai-things'));

var ruleEngineConfigData = {
    "key": "businessRuleEngine",
    "value": {
        "engine": "DROOLS"
    }
}

var payload = {
    "countries": ["Australia", "India", "USA", "UK"]
};

describe(chalk.blue('Decision Table Create - Drools'), function () {
    this.timeout(600000);

    after('cleaning up', function (done) {
        models.DocumentData.destroyAll({}, bootstrap.defaultContext, function (err, result) {
            models.DecisionTable.destroyAll({}, bootstrap.defaultContext, function (err, result) {
                done();
            });
        });
    });

    it('Should fail to create decision table as DROOLs is not configured', function (done) {
        var decisionTableData = {
            "name": "sample",
            "document": {
                "documentName": "sample.xlsx",
                "documentData": "data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,"
            }
        }
        models.SystemConfig.create(ruleEngineConfigData, bootstrap.defaultContext, function (err, res) {
            if (err) {
                return done(err);
            }
            models.DecisionTable.create(decisionTableData, bootstrap.defaultContext, function (err, result) {
                console.log("==========================================");
                console.log("err: ", err);
                console.log("==========================================");
                expect(err).not.to.be.undefined;
                expect(err.code).to.equal('ECONNREFUSED');
                expect(err.errno).to.equal('ECONNREFUSED');
                models.SystemConfig.destroyAll({}, bootstrap.defaultContext, function (err, result) {
                    done(err);
                });
            });
        });
    });

    it('Should sucessfully create decision table but fail to execute it', function (done) {
        var decisionTableData = {
            "name": "sample",
            "document": {
                "documentName": "sample.xlsx",
                "documentData": "data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,"
            }
        }
        models.DecisionTable.create(decisionTableData, bootstrap.defaultContext, function (error, result) {
            if (error) {
                done(error);
            }
            models.SystemConfig.create(ruleEngineConfigData, bootstrap.defaultContext, function (sysErr, data) {
                if (sysErr) {
                    done(sysErr);
                }
                models.DecisionTable.exec("sample", payload, bootstrap.defaultContext, function (err, res) {
                    console.log("==========================================");
                    console.log("err: ", err);
                    console.log("==========================================");
                    expect(err).not.to.be.undefined;
                    expect(err.code).to.equal('ECONNREFUSED');
                    expect(err.errno).to.equal('ECONNREFUSED');
                    models.SystemConfig.destroyAll({}, bootstrap.defaultContext, function (err, result) {
                        done(err);
                    });
                });
            });
        });
    });

    it('Should fail to create decision table as base64 validation of decision data is violated', function (done) {
        var decisionTableData = {
            "name": "sample",
            "document": {
                "documentName": "sample.xlsx",
                "documentData": "wrong decision data"
            }
        }
        models.DecisionTable.create(decisionTableData, bootstrap.defaultContext, function (err, res) {
            expect(err).not.to.be.undefined;
            expect(err.message).to.equal('Decision table data provided is not a base64 encoded string');
            done();
        });
    });

    it('Should parse the document and return the decision table.', function (done) {
        var decisionTableExcel = {"documentData":"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,"}
        models.DecisionTable.parseExcel(decisionTableExcel, bootstrap.defaultContext, function (err, res) {
            if(err){
                done(err);
            }else{
                expect(res.hitPolicy).to.equal('O');
                expect(res.outputs.length).to.equal(3);
                done();
            }
        });
    });

    it('Should fail to create decision table as decision data is not correct', function (done) {
        var decisionTableData = {
            "name": "sample",
            "document": {
                "documentName": "sample.xlsx",
                "documentData": "base64"
            }
        }
        models.DecisionTable.create(decisionTableData, bootstrap.defaultContext, function (err, res) {
            // console.log(err);
            expect(err).not.to.be.undefined;
            expect(err.message).to.equal('Decision table data provided could not be parsed, please provide proper data');
            done();
        });
    });

    it('Should fail to execute decision table as decision table data is not proper', function (done) {
        models.DecisionTable.exec("invalidTableName", {}, bootstrap.defaultContext, function (err, res) {
            expect(err).not.to.be.undefined;
            expect(err.message).to.equal('No Document found for DocumentName invalidTableName');
            done();
        });
    });

});