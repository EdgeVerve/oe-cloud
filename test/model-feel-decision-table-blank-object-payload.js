/**
 * 
 * Â©2016-2017 EdgeVerve Systems Limited (a fully owned Infosys subsidiary),
 * Bangalore, India. All Rights Reserved.
 * 
 */
/* jshint -W024 */
/* jshint expr:true */
//to avoid jshint errors for expect

var bootstrap = require('./bootstrap');
var chalk = require('chalk');
var async = require('async');
var log = require('oe-logger')('model-rule-belongsTo-relation-test');
var chai = require('chai');
var expect = chai.expect;
var loopback = require('loopback');
chai.use(require('chai-things'));
var models = bootstrap.models;
var prefix = 'data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,';
var fs = require('fs');

var Customer;

describe(chalk.blue('model-feel-decision-table-blank-object-payload-test'), function() {
  before('creating the model', function(done) {
    var data = {
      name: 'Customer2',
      properties: {
        name: {
          type: 'string',
          id: true
        },
        amount: {
          type: 'object'
        }
      }
    };

    models.ModelDefinition.create(data, bootstrap.defaultContext, function (err, models) {
      var testModel = loopback.getModel(data.name, bootstrap.defaultContext);
      // testModelWithBase = loopback.getModel(testModelAsBasePM, bootstrap.defaultContext);
      expect(testModel.modelName).to.equal('Customer2-test-tenant');
      Customer = testModel;

      done(err);
    });
  });

  before('inserting some initial data', function(done) {
    var data = [
      {
        name: 'foo',
        amount: {
          value: 250,
          currency: 'INR'
        }
      },
      {
        name: 'foo1',
        amount: {
          value: 250,
          currency: 'US'
        }
      },
      {
        name: 'foo3',
        amount: {}
      }
    ];

    Customer.create(data, bootstrap.defaultContext, done);
  });

  before('convince yourself that model data insertion throws an error for insertion of record with amount as blank string', function(done) {
    var data = {
      name: 'foo4',
      amount: ""
    };

    Customer.create(data, bootstrap.defaultContext, function(err) {
      console.dir(err);
      expect(err).to.be.null;
      done();
    });
  });

  before('create a decision table', function(done) {
    // debugger;
    var binData = fs.readFileSync(__dirname + '/model-rule-data/blank_object.xlsx');
    var docData = prefix + binData.toString('base64');
    var binData2 = fs.readFileSync(__dirname + '/model-rule-data/blank_object2.xlsx');
    var docData2 = prefix + binData2.toString('base64');

    var data = [
      {
        name: 'TestDecision2',
        document: {
          documentName: 'blank_object.xlsx',
          // documentData: 'data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,'
          // documentData : 'data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,'
          // documentData : 'data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,'
          documentData : docData
        }
      },
      {
        name: 'TestDecision3',
        document: {
          documentName: 'blank_object2.xlsx',
          documentData: docData2
        }
      }
    ];

    var DecisionTable = models.DecisionTable;

    DecisionTable.create(data, bootstrap.defaultContext, function(err) {
      if (err) {
        done(err);
      }
      else {
        done();
      }
    });
  });

  it('should execute the decision table rule correctly - test 1', function(done) {
    var DecisionTable = models.DecisionTable;
    Customer.findOne({ where: { name: 'foo'}}, bootstrap.defaultContext, function(err, result) {
      expect(result.name).to.equal('foo');
      expect(result.amount.value).to.equal(250);
      expect(result.amount.currency).to.equal('INR');
      // console.dir(result);
      // result.options = bootstrap.defaultContext;
      // result.options.modelName = Customer.modelName;
      // debugger;
      var payload = result.__data;
      payload.options = bootstrap.defaultContext;
      payload.options.modelName = Customer.modelName;

      DecisionTable.exec('TestDecision2', payload, bootstrap.defaultContext, function(err, dtResult) {
        if (err) {
          console.log('error')
          console.dir(err);
          done(err)
        }
        else {
          console.log('pass')
          // console.dir(dtResult);
          expect(dtResult).to.be.array;
          expect(dtResult[0].errMessage).to.be.true;
          done();  
        }
        // expect(dtResult)
        
      });
    });
  });


  it('should fail to execute the decision table rule correctly - test 2 - because we are trying to fetch non-existent property on an object', function(done) {
    var DecisionTable = models.DecisionTable;
    Customer.findOne({ where: { name: 'foo3'}}, bootstrap.defaultContext, function(err, result) {
      expect(result.name).to.equal('foo3');
      // expect(result.amount.value).to.equal(250);
      // expect(result.amount.currency).to.equal('INR');
      // console.dir(result);
      // result.options = bootstrap.defaultContext;
      // result.options.modelName = Customer.modelName;
      // debugger;
      var payload = result.__data;
      payload.options = bootstrap.defaultContext;
      payload.options.modelName = Customer.modelName;

      DecisionTable.exec('TestDecision3', payload, bootstrap.defaultContext, function(err, dtResult) {
        if (err) {
          // console.log('error')
          console.dir(err);
          done(err)
        }
        else {
          // console.log('pass')
          console.dir(dtResult);
          expect(dtResult).to.be.array;
          expect(dtResult[0].errCode).to.equal('JS_FEEL_ERR');
          done();  

          // conclusion: we cannot find the presence/absence 
          // like this we need an external function for this 
          // use case.
        }
        // expect(dtResult)
        
      });
    });
  });
  
});